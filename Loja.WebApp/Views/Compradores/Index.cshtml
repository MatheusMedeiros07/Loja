@model IEnumerable<Loja.Application.Dtos.CompradorDto>

@{
    ViewData["Title"] = "Gestão de Cadastro de Clientes";
    var nomeRazaoSocial = ViewData["NomeRazaoSocial"]?.ToString();
    var email = ViewData["Email"]?.ToString();
    var telefone = ViewData["Telefone"]?.ToString();
    var dataCadastro = ViewData["DataCadastro"]?.ToString();
    var bloqueado = ViewData["Bloqueado"]?.ToString();
}

<h1>Compradores</h1>

<div class="d-flex justify-content-between align-items-center mb-4">
    <p>Consulte os seus Clientes cadastrados na sua Loja ou realize o cadastro de novos Cliente</p>
    <div>
        <a class="btn btn-primary" href="@Url.Action("Create", "Compradores")">Adicionar Cliente</a>
        <button class="btn btn-danger" id="delete-selected">Deletar Selecionados</button>
    </div>
</div>

<!-- Formulário de Filtro -->
<div id="filter-form" class="filter-form" style="display:none;">
    <h3>Filtrar Compradores</h3>
    <form id="filter-form-fields" method="get" action="@Url.Action("Index", "Compradores")">
        <div class="mb-3 d-flex align-items-center">
            <label for="filter-name" class="form-label me-2">Nome/Razão Social</label>
            <input type="text" class="form-control me-2" id="filter-name" name="nomeRazaoSocial" placeholder="Nome ou Razão Social do Cliente" value="@nomeRazaoSocial">
            @if (!string.IsNullOrEmpty(nomeRazaoSocial))
            {
                <button type="button" class="btn btn-link text-danger remove-filter" data-filter="filter-name">X</button>
            }
        </div>
        <div class="mb-3 d-flex align-items-center">
            <label for="filter-email" class="form-label me-2">E-mail</label>
            <input type="email" class="form-control me-2" id="filter-email" name="email" placeholder="E-mail do Cliente" value="@email">
            @if (!string.IsNullOrEmpty(email))
            {
                <button type="button" class="btn btn-link text-danger remove-filter" data-filter="filter-email">X</button>
            }
        </div>
        <div class="mb-3 d-flex align-items-center">
            <label for="filter-phone" class="form-label me-2">Telefone</label>
            <input type="text" class="form-control me-2" id="filter-phone" name="telefone" placeholder="Telefone do Cliente" value="@telefone">
            @if (!string.IsNullOrEmpty(telefone))
            {
                <button type="button" class="btn btn-link text-danger remove-filter" data-filter="filter-phone">X</button>
            }
        </div>
        <div class="mb-3 d-flex align-items-center">
            <label for="filter-date" class="form-label me-2">Data de Cadastro</label>
            <input type="date" class="form-control me-2" id="filter-date" name="dataCadastro" placeholder="Selecione uma data ou período" value="@dataCadastro">
            @if (!string.IsNullOrEmpty(dataCadastro))
            {
                <button type="button" class="btn btn-link text-danger remove-filter" data-filter="filter-date">X</button>
            }
        </div>
        <div class="mb-3 d-flex align-items-center">
            <label for="filter-blocked" class="form-label me-2">Cliente bloqueado</label>
            <select class="form-select me-2" id="filter-blocked" name="bloqueado">
                <option value="">Selecione</option>
                @if (bloqueado == "sim")
                {
                    <option value="sim" selected>SIM</option>
                    <option value="nao">NÃO</option>
                }
                else if (bloqueado == "nao")
                {
                    <option value="sim">SIM</option>
                    <option value="nao" selected>NÃO</option>
                }
                else
                {
                    <option value="sim">SIM</option>
                    <option value="nao">NÃO</option>
                }
            </select>
            @if (!string.IsNullOrEmpty(bloqueado))
            {
                <button type="button" class="btn btn-link text-danger remove-filter" data-filter="filter-blocked">X</button>
            }
        </div>
        <div class="d-flex justify-content-between">
            <button type="submit" class="btn btn-primary" id="apply-filters">Aplicar Filtros</button>
            <button type="button" class="btn btn-secondary" id="clear-filters">Limpar Filtros</button>
        </div>
    </form>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                <input type="checkbox" id="select-all" />
            </th>
            <th>
                Nome/Razão Social
            </th>
            <th>
                E-mail
            </th>
            <th>
                Telefone
            </th>
            <th>
                Data de Cadastro
            </th>
            <th>
                Bloqueado
            </th>
            <th>
                <button class="btn btn-secondary" id="filter-button">Filtrar</button>
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <input type="checkbox" class="select-client" value="@item.Id" />
                    </td>
                    <td>
                        @item.NomeRazaoSocial
                    </td>
                    <td>
                        @item.Email
                    </td>
                    <td>
                        <!-- Aqui você pode adicionar o campo de telefone se estiver presente no DTO -->
                    </td>
                    <td>
                        @item.DataCadastro.ToString("dd/MM/yyyy")
                    </td>
                    <td>
                        <input type="checkbox" @(item.Bloqueado ? "checked" : "") />
                    </td>
                    <td>
                        <a class="btn btn-info" href="@Url.Action("Details", "Compradores", new { id = item.Id })">Detalhes</a>
                        <a class="btn btn-warning" href="@Url.Action("Edit", "Compradores", new { id = item.Id })">Editar</a>
                        <a class="btn btn-danger" href="@Url.Action("Delete", "Compradores", new { id = item.Id })">Deletar</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<!-- Modal de confirmação -->
<div class="modal fade" id="confirmDeleteModal" tabindex="-1" aria-labelledby="confirmDeleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmDeleteModalLabel">Confirmação de Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="confirmDeleteMessage"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Excluir</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            let selectedIds = [];

            $('#select-all').click(function () {
                var checkedStatus = this.checked;
                $('.select-client').each(function () {
                    this.checked = checkedStatus;
                });
            });

            $('.select-client').change(function () {
                if (!this.checked) {
                    $('#select-all').prop('checked', false);
                } else {
                    if ($('.select-client:checked').length === $('.select-client').length) {
                        $('#select-all').prop('checked', true);
                    }
                }
            });

            $('#filter-button').click(function () {
                $('#filter-form').toggle(); // Mostrar ou esconder o formulário de filtro
            });

            $('#delete-selected').click(function () {
                selectedIds = [];
                $('.select-client:checked').each(function () {
                    selectedIds.push(parseInt($(this).val()));
                });

                if (selectedIds.length > 0) {
                    if (selectedIds.length === 1) {
                        $('#confirmDeleteMessage').text('Deseja excluir o registro do cliente selecionado?');
                    } else {
                        $('#confirmDeleteMessage').text(`Deseja excluir os registros dos clientes selecionados? Foram selecionados ${selectedIds.length} registros para exclusão`);
                    }
                    $('#confirmDeleteModal').modal('show');
                } else {
                    alert("Por favor, selecione pelo menos um cliente para deletar.");
                }
            });

            $('#confirmDeleteButton').click(function () {
                if (selectedIds.length > 0) {
                    $.ajax({
                        url: '@Url.Action("DeleteSelected", "Compradores")',
                        type: 'POST',
                        data: JSON.stringify(selectedIds),
                        contentType: 'application/json; charset=utf-8',
                        success: function (result) {
                            location.reload(); // Recarregar a página após a exclusão
                        },
                        error: function (err) {
                            console.error("Erro ao deletar clientes: ", err);
                        }
                    });
                }
                $('#confirmDeleteModal').modal('hide');
            });

            // Fechar o formulário de filtro ao clicar fora dele
            $(document).click(function (event) {
                var $target = $(event.target);
                if (!$target.closest('#filter-form').length && !$target.closest('#filter-button').length && $('#filter-form').is(":visible")) {
                    $('#filter-form').hide();
                }
            });

            // Limpar os filtros ao clicar no botão "Limpar Filtros"
            $('#clear-filters').click(function () {
                $('#filter-form-fields').find('input[type="text"], input[type="email"], input[type="date"], select').val('');
                // Resetar a URL para remover os parâmetros de filtro
                window.location.href = '@Url.Action("Index", "Compradores")';
            });

            // Remover um filtro específico ao clicar no botão de exclusão
            $('.remove-filter').click(function () {
                var filterId = $(this).data('filter');
                $('#' + filterId).val('');
                $('#filter-form-fields').submit();
            });
        });
    </script>
}

<!-- Referência ao novo arquivo CSS -->
<link rel="stylesheet" href="~/css/filter-form.css" />